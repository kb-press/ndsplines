name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_wheels:
    name: Build and test wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build wheels and test
        uses: pypa/cibuildwheel@2.5.0
        env:
          # disable builds for PyPy, all 32-bit, musl
          CIBW_SKIP: "pp* *-win32 *-manylinux_i686 *-musllinux*"
          # testing
          CIBW_TEST_REQUIRES: pytest pandas
          CIBW_TEST_COMMAND: pytest {package}/tests

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        # this makes cythonize work so .c files are included in the sdist
        run: python -m pip install numpy cython

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  publish:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Publish wheels to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          # password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          # repository_url: https://test.pypi.org/legacy/
